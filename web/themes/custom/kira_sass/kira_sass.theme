<?php

/**
 * @file
 * Functions to support theming in the SASS Starterkit subtheme.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_system_theme_settings_alter() for settings form.
 *
 * Replace Barrio setting options with subtheme ones.
 */
function kira_sass_form_system_theme_settings_alter(&$form, FormStateInterface $form_state) {
  $form['components']['navbar']['bootstrap_barrio_navbar_top_background']['#options'] = array(
    'bg-primary' => t('Primary'),
    'bg-secondary' => t('Secondary'),
    'bg-light' => t('Light'),
    'bg-dark' => t('Dark'),
    'bg-white' => t('White'),
    'bg-transparent' => t('Transparent'),
  );
  $form['components']['navbar']['bootstrap_barrio_navbar_background']['#options'] = array(
    'bg-primary' => t('Primary'),
    'bg-secondary' => t('Secondary'),
    'bg-light' => t('Light'),
    'bg-dark' => t('Dark'),
    'bg-white' => t('White'),
    'bg-transparent' => t('Transparent'),
  );
}

function kira_sass_preprocess_page(array &$variables) {
  // Load the site name out of configuration.
  $variables['site_name'] = 'default';
  $config = \Drupal::config('system.site');
  $variables['site_name'] = $config->get('name');
  $variables['navbar_attributes']['class'][] = 'container'; //can apply max-width
}

function kira_sass_preprocess_node__simple_page__full(array &$variables) {
  //for simple page, add classes to article tag to control width
  $variables['attributes']['class'][] = 'container';
  $variables['attributes']['class'][] = 'justify-content-center';


  // get section and add it to article class
  $node = $variables['node'];

  if ($node->hasField('field_site_section') && !$node->get('field_site_section')->isEmpty()) {
    // Get the value of the field.
    $field_value = $node->get('field_site_section')->get(0)->getValue();
    // Add the class to the entity as an attribute.
    $variables['attributes']['class'][] = 'section-'.$field_value['value'];
  }
}

function kira_sass_preprocess_form_element (array &$variables) {
  $variables['description']['content'] = 'Your address won\'t be displayed.';
}

function kira_sass_preprocess_input (array &$variables) {
  $variables['page_type'] = NULL;
  $current_path = \Drupal::service('path.current')->getPath();
  if (strpos($current_path, 'contact') !== false) {
    $variables['page_type'] = 'contact';
  }

}

/**
 * Adds paragraph editor-set variables to field classes
 */
function kira_sass_preprocess_paragraph(&$variables) {

  $paragraph = $variables['paragraph'];

  // Retrieve certain field's values and add them as CSS classes.
  $para_fields = [
    'field_alignment',
    'field_background_color',
  ];

  foreach ($para_fields as $para_field) {

    if ($paragraph->hasField($para_field)) {

      if (!$paragraph->get($para_field)->isEmpty()) {

        $variables['attributes']['class'][] = $paragraph->get($para_field)->getString();
      }
    }
  }
}

/**
 * Adds img-fluid tags where needed.
 */
function kira_sass_preprocess_image(&$variables) {
    $test = $variables['uri'];
    if (str_contains($test, 'styles/illustration')) {
        $variables['attributes']['class'][] = 'img-fluid';
    }
}


