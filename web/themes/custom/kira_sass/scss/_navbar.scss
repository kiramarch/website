// Contents
//
// Navbar
// Navbar brand
// Navbar nav
// Navbar text
// Navbar divider
// Responsive navbar
// Navbar position
// Navbar themes


// Navbar
//
// Provide a static navbar from which we expand to create full-width, fixed, and
// other navbar variations.

.navbar {
  position: relative;
  display: flex;
  flex-wrap: wrap; // allow us to do the line break for collapsing content
  align-items: center;
  justify-content: space-between; // space out brand from logo
  padding: $navbar-padding-y $navbar-padding-x;

  // Because flex properties aren't inherited, we need to redeclare these first
  // few properties so that content nested within behave properly.
  %container-flex-properties {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: space-between;
  }

  .container,
  .container-fluid {
    @extend %container-flex-properties;
  }

  @each $breakpoint, $container-max-width in $container-max-widths {
    > .container#{breakpoint-infix($breakpoint, $container-max-widths)} {
      @extend %container-flex-properties;
    }
  }
}


// Navbar brand
//
// Used for brand, project, or site names.

.navbar-brand {
  display: inline-block;
  padding-top: $navbar-brand-padding-y;
  padding-bottom: $navbar-brand-padding-y;
  margin-right: $navbar-padding-x;
  @include font-size($navbar-brand-font-size);
  line-height: inherit;
  white-space: nowrap;

  @include hover-focus() {
    text-decoration: none;
  }
}


// Navbar nav
//
// Custom navbar navigation (doesn't require `.nav`, but does make use of `.nav-link`).

.navbar-nav {
  display: flex;
  flex-direction: column; // cannot use `inherit` to get the `.navbar`s value
  padding-left: 0;
  margin-bottom: 0;
  list-style: none;

  .nav-link {
    padding-right: 0;
    padding-left: 0;
  }

  .dropdown-menu {
    position: static;
    float: none;
  }
}


// Navbar text
//
//

.navbar-text {
  display: inline-block;
  padding-top: $nav-link-padding-y;
  padding-bottom: $nav-link-padding-y;
}


// Responsive navbar
//
// Custom styles for responsive collapsing and toggling of navbar contents.
// Powered by the collapse Bootstrap JavaScript plugin.

// When collapsed, prevent the toggleable navbar contents from appearing in
// the default flexbox row orientation. Requires the use of `flex-wrap: wrap`
// on the `.navbar` parent.
.navbar-collapse {
  flex-basis: 100%;
  flex-grow: 1;
  // For always expanded or extra full navbars, ensure content aligns itself
  // properly vertically. Can be easily overridden with flex utilities.
  align-items: center;
}

// Button for toggling the navbar when in its collapsed state
.navbar-toggler {
  padding: $navbar-toggler-padding-y $navbar-toggler-padding-x;
  @include font-size($navbar-toggler-font-size);
  line-height: 1;
  background-color: transparent; // remove default button style
  border: 0 solid transparent; // remove default button style
  @include border-radius($navbar-toggler-border-radius);

  @include hover-focus() {
    text-decoration: none;
  }
}

// Keep as a separate element so folks can easily override it with another icon
// or image file as needed.
.navbar-light .navbar-toggler-icon {
  background-image: url("../templates/l_menu.svg");  
  display: inline-block;
  width: 2.25em;
  height: 2.25em;
  vertical-align: middle;
  content: "";
  background-position-y: center;
  background-repeat: no-repeat;
  background-attachment: initial;
  background-origin: initial;
  background-clip: initial;
  background-color: initial; 
}

.navbar-light .navbar-toggler-icon:hover {
  // background-color: $primary-light;
  background-image: url("../templates/l_menu_light.svg");  
}

.navbar-nav-scroll {
  max-height: $navbar-nav-scroll-max-height;
  overflow-y: auto;
}

// Generate series of `.navbar-expand-*` responsive classes for configuring
// where your navbar collapses.
.navbar-expand {
  @each $breakpoint in map-keys($grid-breakpoints) {
    $next: breakpoint-next($breakpoint, $grid-breakpoints);
    $infix: breakpoint-infix($next, $grid-breakpoints);

    &#{$infix} {
      @include media-breakpoint-down($breakpoint) {
        %container-navbar-expand-#{$breakpoint} {
          padding-right: 0;
          padding-left: 0;
        }

        > .container,
        > .container-fluid {
          @extend %container-navbar-expand-#{$breakpoint};
        }

        @each $size, $container-max-width in $container-max-widths {
          > .container#{breakpoint-infix($size, $container-max-widths)} {
            @extend %container-navbar-expand-#{$breakpoint};
          }
        }
      }

      @include media-breakpoint-up($next) {
        flex-flow: row nowrap;
        justify-content: flex-start;

        .navbar-nav {
          flex-direction: row;

          .dropdown-menu {
            position: absolute;
          }

          .nav-link {
            padding-right: $navbar-nav-link-padding-x;
            padding-left: $navbar-nav-link-padding-x;
          }
        }

        // For nesting containers, have to redeclare for alignment purposes
        %container-nesting-#{$breakpoint} {
          flex-wrap: nowrap;
        }

        > .container,
        > .container-fluid {
          @extend %container-nesting-#{$breakpoint};
        }

        @each $size, $container-max-width in $container-max-widths {
          > .container#{breakpoint-infix($size, $container-max-widths)} {
            @extend %container-nesting-#{$breakpoint};
          }
        }

        .navbar-nav-scroll {
          overflow: visible;
        }

        .navbar-collapse {
          display: flex !important; // stylelint-disable-line declaration-no-important

          // Changes flex-bases to auto because of an IE10 bug
          flex-basis: auto;
        }

        .navbar-toggler {
          display: none;
        }
      }
    }
  }
}


// Navbar themes
//
// Styles for switching between navbars with light or dark background -- removed dark variation

// Dark links against a light background

@include media-breakpoint-down(xs) {
  .navbar-light {

    svg {
	    display: none;
    }	

  }
}

@include media-breakpoint-up(sm) {
  .navbar-light {
  
  //shapes behind nav items -- set initial state first and then hover state 
    .nav-rt {
	  fill: $accent-light;
    }

    li.show {color: $white;}

    a.nav-link, span.nav-link {
      margin-top: -65px;
    }

    #Work-rt {
	  visibility: hidden;
	  transform: translate(-105px, 75px) rotate(-20deg) scale(1.1);
    }
  
    #Play-rt {
	  visibility: hidden;
	  transform: translate(-5px, -6px);
    }
  
    #Create-rt {
      visibility: visible;
	  transform: rotate(5deg) translate(-30px, -80px) scale(1.25);
    }

    .dropdown-item, .dropdown-menu {
      width: 7rem;
    }
  
    .dropdown-item {
      padding: 5px 5px 5px 15px;
    }

    li:nth-child(1):hover, li:nth-child(1):focus, 
    li:nth-child(1).active:hover, li:nth-child(1).active:focus  {
      a {color: $white;}
	  #Work-rt {
	    fill: $primary-dark;
	    visibility: visible;
	  }
    }

    li:nth-child(2):hover, li:nth-child(2):focus, 
    li:nth-child(2).active:hover, li:nth-child(2).active:focus,
    li:nth-child(2).show:hover, li:nth-child(2).show:focus,
    li:nth-child(2).show {
      span, a,  {color: $white;}
      #Play-rt {
	    fill: $accent-dark;
	    visibility: visible;
	  }
	
      ul.dropdown-menu {
        margin-top: 8px;
	  }
	  ul.dropdown-menu li a {
        color: $gray-800;
	    font-family: $font-family-serif;
      }

    }

    li:nth-child(3):hover, li:nth-child(3):focus,
    li:nth-child(3).active:hover, li:nth-child(3).active:focus {
      a {color: $white;}
	  #Create-rt {
	    fill: $accent-shade;
	  }
    }

    .navbar-nav {
      .nav-link { // controls font of  expanded top-level, span or a
      color: $gray-800; //matches text
      font-family: $headings-font-family;
	  font-size: 1.5rem;
      text-align: center;
    }

//    .show > .nav-link,
//    .active > .nav-link,
//    .nav-link.show,
//    .nav-link.active {
//      color: $navbar-light-active-color;
//    }
    }

//  .navbar-toggler {
//    color: $navbar-light-color;
//    border-color: $navbar-light-toggler-border-color;
//  }

    .navbar-text {
      color: $navbar-light-color;
      a {
        color: $navbar-light-active-color;

        @include hover-focus() {
          color: $navbar-light-active-color;
        }
      }
    }
  }
}
